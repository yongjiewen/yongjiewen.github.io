<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python数据类型]]></title>
    <url>%2F2019%2F06%2F12%2Fpython%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[数据类型什么是数据？ x=18，18是我们想要存储的数据为何数据要分不同的类型 数据是用来表示状态的，不同的状态就应该用不同的类型的数据去表示数据类型 可变类型与不可变类型 可变：在id不变的情况，值可以改变不可变：值不变，id不变 数字（整形，长整形，浮点型，复数） 字符串 字节串：在介绍字符编码时介绍字节bytes类型 列表 元组 字典 集合 布尔类型bool：True，False布尔类型bool 所有数据类型，自带布尔值 #只有三种类型的值为False 0 None 空:’’,[],{} 其余全部为真（True） 数字整形int 作用：用来表示年龄，等级，证件号等整数相关的 定义： age=18 #实质age=int(18) 浮点型float 作用：用来表示工资，身高，体重参数等有小数相关的 定义： salary=180.25 #实质salary=float(180.25) 字符串(str) 作用：用来表示名字、性别、地址等信息 定义：在单引号、双引号或者三引号内，由一串字符组成 name=’jack’ #name=str(‘jack’) 基本使用 1、按索引取值(正向取+反向取) ：只能取 索引取值从0开始算起1234567&gt;&gt;&gt;name='Hello jack'&gt;&gt;&gt;print(name[0])H&gt;&gt;&gt;print(name[6])o&gt;&gt;&gt;print(name[-1])k 2、切片(顾头不顾尾，步长) 取出我们想要部分的字符串1234567&gt;&gt;&gt;res='my name is jack'&gt;&gt;&gt;print(res[0:7])my name&gt;&gt;&gt;print(res[3:7])name&gt;&gt;&gt;print(res[0:7:2]) #步长：每几个中取出一个m ae 3、长度len 统计字符的长度个数len(str)123&gt;&gt;&gt;res='my name is jack'&gt;&gt;&gt;print(len(res))15 4、移除空白strip strip() 方法用于移除字符串头尾指定的字符（默认为空格）或字符序列。注意：该方法只能删除开头或是结尾的字符，不能删除中间部分的字符。语法：str.strip(str=’’)str – 去除符，默认为所有的空字符，包括空格、换行(\n)、制表符(\t)等 str.stiip()默认不加参数为去除两边空格 str.lstrip()默认不加参数为去除左边空格 str.rstrip()默认不加参数为去除右边空格 12345678910111213&gt;&gt;&gt;name='##jack####'&gt;&gt;&gt;print(name.strip('#')) #去除两边的符号jack&gt;&gt;&gt;print(name.lstrip('#')) #去除左边的符号jack####&gt;&gt;&gt;print(name.rstrip('#')) #去除右边的符号##jack&gt;&gt;&gt;name=' jack '&gt;&gt;&gt;print(name.strip()) #去除两边的空格jack 5、切分split split() 通过指定分隔符对字符串进行切片语法：str.split(str=’’,num)str – 分隔符，默认为所有的空字符，包括空格、换行(\n)、制表符(\t)等。num – 分割次数。默认为 -1, 即分隔所有。 用法 str.split()从左边开始像右边切除将其分成一列表的形式 用法 str.rsplit()从右边开始像左边切除将其分成一列表的形式12345678910&gt;&gt;&gt;res1='jack:18:age'&gt;&gt;&gt;res2=res1.split(':') #以：形式切除所有位置&gt;&gt;&gt;res3=res1.split(':',1) #切除左边一个位置&gt;&gt;&gt;res4=res1.rsplit(':',1) #切除右边一个位置&gt;&gt;&gt;print(res2)['jack', '18', 'age']&gt;&gt;&gt;print(res3)['jack', '18:age']&gt;&gt;&gt;print(res4)['jack:18', 'age'] 6、连接join join() 方法用于将序列中的元素以指定的字符连接生成一个新的字符串。语法：str.join(sequence) sequence – 要连接的元素序列。 用法： join方法传入的列表必须只包含str类型的元素: ‘’.join(str)1234567&gt;&gt;&gt;l=['jack', '18', 'age']&gt;&gt;&gt;res=''.join(l) #以空格将其连接成字符串&gt;&gt;&gt;print(res)jack18age&gt;&gt;&gt;res2=':'.join(l) #以：将其连接成字符串&gt;&gt;&gt;print(res2)jack:18:age 7、成员运算in和not in 判断元素在不在其里面在里面则返回True ,否则返回False12345&gt;&gt;&gt;res='my name is jack'&gt;&gt;&gt;print('jack' in res) True&gt;&gt;&gt;print('jack' not in res)False 8、 format 格式化输出 str.format()，它增强了字符串格式化的功能。基本语法是通过 {} 和 : 来代替以前的 % 。format 函数可以接受不限个参数，位置可以不按顺序。 按默认位置传值123456&gt;&gt;&gt;s1='my name is %s my age is %s' %('jack',18)&gt;&gt;&gt;s2='my name is &#123;&#125; my age is &#123;&#125;'.format('jack',18)&gt;&gt;&gt;print(s1)my name is jack my age is 18&gt;&gt;&gt;print(s2)my name is jack my age is 18 按指定位置传值123456789&gt;&gt;&gt;s1='my name is &#123;0&#125; my age is &#123;1&#125;'.format('jack',18)&gt;&gt;&gt;s2='my name is &#123;1&#125; my age is &#123;0&#125;'.format(18,'jack')&gt;&gt;&gt;s3='my name is &#123;name&#125; my age is &#123;age&#125;'.format(age=18,name='jack')&gt;&gt;&gt;print(s1)my name is jack my age is 18&gt;&gt;&gt;print(s1)my name is jack my age is 18&gt;&gt;&gt;print(s3)my name is jack my age is 18 数字格式化下表展示了 str.format() 格式化数字的多种方法 12&gt;&gt;&gt; print("&#123;:.2f&#125;".format(3.1415926));3.14 数字 格式 输出 描述 3.1415926 {:.2f} 3.14 保留小数点后两位 3.1415926 {:+.2f} +3.14 带符号保留小数点后两位 -1 {:+.2f} -1.00 带符号保留小数点后两位 2.71828 {:.0f} 3 不带小数 5 {:0&gt;2d} 05 数字补零(填充左边, 宽度为2) 5 {:x&lt;4d} 5xxx 数字补x(填充右边, 宽度为4) 10 {:x&lt;4d} 10xx 数字补x(填充右边, 宽度为4) 1000000 {:,} 1,000,000 以逗号分隔的数字格式 0.25 {:.2%} 25.00% 百分比格式 1000000000 {:.2e} 1.00e+09 指数记法 13 {:10d} 13 右对齐 (默认, 宽度为10) 13 {:&lt;10d} 13 左对齐 (宽度为10) 13 {:^10d} 13 中间对齐 (宽度为10) 9、大小写字符转换 lower将字母转换成小写 语法：str.lower() upper将字母转换成大写 语法：str.upper()1234&gt;&gt;&gt;print('JACK'.lower())jack&gt;&gt;&gt;print('jack'.upper())JACK 10、字符串的替换replace replace() 方法把字符串中的 old（旧字符串） 替换成 new(新字符串)，如果指定第三个参数max，则替换不超过 max 次。语法：str.replace(old, new[, max])12345&gt;&gt;&gt;res='hello jack jack'&gt;&gt;&gt;print(res.replace('jack','jie'))hello jie jie&gt;&gt;&gt;print(res.replace('jack','jie',1))hello jie jack 总结字符串类型 存一个值 只能存一个值 有序or无序 有序 可变or不可变 ！！！不可变：值变，id就变。不可变==可hash 列表(list) 作用：多个爱好,多门课程,存放多个值定义：[]内可以有多个任意类型的值，逗号分隔list1=[‘h’,’e’,’l’,’l’,’o’] #等同于list1=list(‘hello’) 基本使用常规操作 1、按索引存取值(正向存取+反向存取)：即可改也可以取12345678910&gt;&gt;&gt;list1=['h','e','l','l','o']&gt;&gt;&gt;print(list1[1])e&gt;&gt;&gt;print(list1[-1])o&gt;&gt;&gt;list1[1]='w'&gt;&gt;&gt;print(list1)['h', 'w', 'l', 'l', 'o']&gt;&gt;&gt;print(list1[1])w 2、切片(顾头不顾尾，步长)12345&gt;&gt;&gt;l=['name','jack','age','18','python']&gt;&gt;&gt;print(l[0:2])['name', 'jack']&gt;&gt;&gt;print(l[0:4:2])['name', 'jack'] 3、长度len123&gt;&gt;&gt;l=['name','jack','age','18','python']&gt;&gt;&gt;print(len(l))5 4、成员运算in和not in123&gt;&gt;&gt;l=['name','jack','age','18','python']&gt;&gt;&gt;print('python' in l)True 5、列表值的增加列表末尾追加appen append() 方法用于在列表末尾添加新的对象。语法：list.append(obj) obj – 添加到列表末尾的对象。1234&gt;&gt;&gt;l=['name','jack','age','18']&gt;&gt;&gt;l.append('python')&gt;&gt;&gt;print(l)['name', 'jack', 'age', '18', 'python'] 列表指定位置插入insert insert() 函数用于将指定对象插入列表的指定位置。语法：list.insert(index, obj)index – 对象 obj 需要插入的索引位置。obj – 要插入列表中的对象。1234&gt;&gt;&gt;l=['name','jack','age','18']&gt;&gt;&gt;l.insert(2,'python')&gt;&gt;&gt;print(l)['name', 'jack', 'python', 'age', '18'] 6、列表值的删除有返回值的删除pop() pop() 函数用于移除列表中的一个元素（默认最后一个元素），并且返回该元素的值。语法：list.pop([index])index– 可选参数，要移除列表元素的索引值，不能超过列表总长度，默认为 index=-1，删除最后一个列表值12345&gt;&gt;&gt;l=['name','jack','age','18','python']&gt;&gt;&gt;l.pop() # 默认删除末尾'python'&gt;&gt;&gt;print(l)['name', 'jack', 'age', '18'] 没有返回值的删除remove() remove() 函数用于移除列表中某个值的第一个匹配项。语法：list.remove(obj) obj – 列表中要移除的对象，指定要删除的对象。1234&gt;&gt;&gt;l=['name','jack','age','18','python']&gt;&gt;&gt;l.remove('python')&gt;&gt;&gt;print(l)['name', 'jack', 'age', '18'] 7、反向输出元素 reverse() 函数用于反向列表中元素。语法：list.reverse()123&gt;&gt;&gt;l=['name','jack','age','18','python']&gt;&gt;&gt;print(l.reverse())['python', '18', 'age', 'jack', 'name'] 8、列表排序 sort() 函数用于对原列表进行排序，如果指定参数，则使用比较函数指定的比较函数。语法：list.sort(cmp=None, key=None, reverse=False)cmp – 可选参数, 如果指定了该参数会使用该参数的方法进行排序。key – 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。reverse – 排序规则，reverse = True 降序， reverse = False 升序（默认）1234567&gt;&gt;&gt; l=[1,5,2,9,6,8]&gt;&gt;&gt; l.sort()&gt;&gt;&gt; print(l)[1, 2, 5, 6, 8, 9]&gt;&gt;&gt;l.sort(reverse=True)&gt;&gt;&gt;print(l)[9, 8, 6, 5, 2, 1] 9、统计元素出现次数 count() 方法用于统计某个元素在列表中出现的次数。语法：list.count(obj) obj – 列表中统计的对象。123&gt;&gt;&gt;l=['hello','jack',18,'jack']&gt;&gt;&gt;l.count('jack')2 10、查看元素出现的位置(索引) index() 函数用于从列表中找出某个值第一个匹配项的索引位置。语法：list.index(obj) obj–查找的元素12345&gt;&gt;&gt;l=['hello','jack',18,'jack']&gt;&gt;&gt;l.index('jack')1&gt;&gt;&gt;l.index(18,1,3)2 11、循环依赖索引12345678l=['name','jack','age','18','python']i=0while i &lt; len(l): print(l[i]) i+=1依次取出列表的元素for i in range(len(l)): print(i,l[i]) 不依赖索引12for item in l: print(item) 补充for循环1234567for i in range(0,5,2): #0 2 4 print(i)for i in range(10): #默认从零起始 print(i)for i in range(10,-2,-1): # 10 9 8 ... print(i) 总结列表类型 存多个值 有序 可变]]></content>
      <categories>
        <category>python基础知识</category>
      </categories>
      <tags>
        <tag>python基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[流程控制循环]]></title>
    <url>%2F2019%2F06%2F11%2F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%BE%AA%E7%8E%AF%2F</url>
    <content type="text"></content>
      <categories>
        <category>python基础知识</category>
      </categories>
      <tags>
        <tag>python基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python入门介绍]]></title>
    <url>%2F2019%2F06%2F10%2Fpython%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[python介绍 python是一门编程语言，作为学习python的开始，需要事先搞明白：程的目的是什么？什么是编程语言？什么是编程？ Python是一种面向对象的解释型计算机程序设计语言，由荷人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。IEEE发布2017年编程语言排行榜：Python高居首位。 Python语言具有简洁性、易读性以及可扩展性，具有丰富和强大的库它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。 已被逐渐广泛应用于系统管理任务的处理和Web编程，大数据处理，学运算，Web编程，用户界面，游戏开发中。 从卡耐基梅隆大学的编程基础、麻省理工学院到中小学的编入课，Python越来越多被采纳和使用。Python语言的特点 简单、高级、面向对象、可扩展性、免费开源、可移植性、丰富的库、可嵌入性Python语言版本和开发环境2个主要版本：Python 2和Python 3 Python 3在设计时，没有考虑向下兼容，Python3于2008年发布，是一个较大的升级。但早期Python版本设计的程序不能在Python3上运行。Python语言的集成开发环境 IDLE（内置）、PyChram、PythonWin、Eclipse + Pydev插件、Visual Studio + Python Tools for Visual StudioPython语言的实现 python解释器Python安装下载python官网:https://www.python.org/downloads/windows/分别选择要安装的版本以及自己的操作系统对应的 测试是否安装成功 打开运行框&gt;&gt;&gt;&gt; 输入cmd回车 &gt; &gt;&gt;&gt;命令行中输入 python 能进入交互式环境则安装成功，里面会显示我们安装的版本运行Python集成开发环境IDLE运行IDLE环境安装完成后在程序里会增加一个IDLE,运行IDLE环境，使用集成开发环境IDLE解释执行Python语句，输入print(‘Hello world’) 会运行输出Hello world。关闭IDLE环境输入quit()命令；或者直接关闭IDLE窗口，均可以关闭Python解释器 变量什么是变量变量即变化的量，核心是“变”与“量”二字，变即变化，量即衡量状态。 为什么要有变量程序执行的本质就是一系列状态的变化，变是程序执行的直接体现，所以我们需要有一种机制能够反映或者说是保存下来程序执行时状态以及状态的变化。 如何定义变量 变量名，等号，变量值name=’jack’sex=’male’age=20level=10变量的定义规范 变量名只能是 字母、数字或下划线的任意组合 变量名的开头不能是数字 关键字不能声明为变量名[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’] 尽量避免使用中文，拼音命名注释随着学习的深入，我们的代码会越来越复杂化，加上注释方便自己以后和别人调用看懂，增加代码的可读性 代码注释分单行和多行注释， 单行注释用#，多行注释可以用三对双引号””” “”” 更新中。。。]]></content>
      <categories>
        <category>python基础知识</category>
      </categories>
      <tags>
        <tag>python基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F06%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
